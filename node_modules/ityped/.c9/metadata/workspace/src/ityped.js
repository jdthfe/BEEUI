{"filter":false,"title":"ityped.js","tooltip":"/src/ityped.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":44,"column":23},"end":{"row":44,"column":24},"action":"insert","lines":["o"],"id":84}],[{"start":{"row":44,"column":24},"end":{"row":44,"column":25},"action":"insert","lines":["t"],"id":85}],[{"start":{"row":44,"column":25},"end":{"row":44,"column":26},"action":"insert","lines":["h"],"id":86}],[{"start":{"row":44,"column":26},"end":{"row":44,"column":27},"action":"insert","lines":["e"],"id":87}],[{"start":{"row":44,"column":27},"end":{"row":44,"column":28},"action":"insert","lines":["r"],"id":88}],[{"start":{"row":44,"column":28},"end":{"row":44,"column":29},"action":"insert","lines":[" "],"id":89}],[{"start":{"row":44,"column":28},"end":{"row":44,"column":29},"action":"remove","lines":[" "],"id":90}],[{"start":{"row":44,"column":28},"end":{"row":44,"column":29},"action":"insert","lines":[" "],"id":91}],[{"start":{"row":44,"column":29},"end":{"row":44,"column":30},"action":"insert","lines":["s"],"id":92}],[{"start":{"row":44,"column":30},"end":{"row":44,"column":31},"action":"insert","lines":["t"],"id":93}],[{"start":{"row":44,"column":31},"end":{"row":44,"column":32},"action":"insert","lines":["r"],"id":94}],[{"start":{"row":44,"column":32},"end":{"row":44,"column":33},"action":"insert","lines":["i"],"id":95}],[{"start":{"row":44,"column":33},"end":{"row":44,"column":34},"action":"insert","lines":["n"],"id":96}],[{"start":{"row":44,"column":34},"end":{"row":44,"column":35},"action":"insert","lines":["g"],"id":97}],[{"start":{"row":44,"column":35},"end":{"row":44,"column":36},"action":"insert","lines":["s"],"id":98}],[{"start":{"row":44,"column":39},"end":{"row":44,"column":40},"action":"insert","lines":[" "],"id":99}],[{"start":{"row":44,"column":40},"end":{"row":44,"column":41},"action":"insert","lines":["f"],"id":100}],[{"start":{"row":44,"column":41},"end":{"row":44,"column":42},"action":"insert","lines":["u"],"id":101}],[{"start":{"row":44,"column":42},"end":{"row":44,"column":43},"action":"insert","lines":["n"],"id":102}],[{"start":{"row":44,"column":43},"end":{"row":44,"column":44},"action":"insert","lines":["c"],"id":103}],[{"start":{"row":44,"column":44},"end":{"row":44,"column":45},"action":"insert","lines":["t"],"id":104}],[{"start":{"row":44,"column":45},"end":{"row":44,"column":46},"action":"insert","lines":["i"],"id":105}],[{"start":{"row":44,"column":46},"end":{"row":44,"column":47},"action":"insert","lines":["n"],"id":106}],[{"start":{"row":44,"column":47},"end":{"row":44,"column":49},"action":"insert","lines":["()"],"id":107}],[{"start":{"row":44,"column":48},"end":{"row":44,"column":49},"action":"remove","lines":[")"],"id":108}],[{"start":{"row":44,"column":47},"end":{"row":44,"column":48},"action":"remove","lines":["("],"id":109}],[{"start":{"row":44,"column":46},"end":{"row":44,"column":47},"action":"remove","lines":["n"],"id":110}],[{"start":{"row":44,"column":46},"end":{"row":44,"column":47},"action":"insert","lines":["o"],"id":111}],[{"start":{"row":44,"column":47},"end":{"row":44,"column":48},"action":"insert","lines":["n"],"id":112}],[{"start":{"row":44,"column":48},"end":{"row":44,"column":50},"action":"insert","lines":["()"],"id":113}],[{"start":{"row":44,"column":50},"end":{"row":44,"column":51},"action":"insert","lines":["{"],"id":114}],[{"start":{"row":44,"column":51},"end":{"row":46,"column":3},"action":"insert","lines":["","    ","  }"],"id":115}],[{"start":{"row":45,"column":4},"end":{"row":45,"column":5},"action":"insert","lines":["c"],"id":116}],[{"start":{"row":45,"column":5},"end":{"row":45,"column":6},"action":"insert","lines":["o"],"id":117}],[{"start":{"row":45,"column":6},"end":{"row":45,"column":7},"action":"insert","lines":["n"],"id":118}],[{"start":{"row":45,"column":7},"end":{"row":45,"column":8},"action":"insert","lines":["s"],"id":119}],[{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"insert","lines":["o"],"id":120}],[{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"insert","lines":["l"],"id":121}],[{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"insert","lines":["e"],"id":122}],[{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"insert","lines":["."],"id":123}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"insert","lines":["l"],"id":124}],[{"start":{"row":45,"column":13},"end":{"row":45,"column":14},"action":"insert","lines":["o"],"id":125}],[{"start":{"row":45,"column":14},"end":{"row":45,"column":15},"action":"insert","lines":["g"],"id":126}],[{"start":{"row":45,"column":15},"end":{"row":45,"column":17},"action":"insert","lines":["()"],"id":127}],[{"start":{"row":45,"column":16},"end":{"row":45,"column":17},"action":"insert","lines":["i"],"id":128}],[{"start":{"row":45,"column":17},"end":{"row":45,"column":18},"action":"insert","lines":["t"],"id":129}],[{"start":{"row":45,"column":18},"end":{"row":45,"column":19},"action":"insert","lines":["e"],"id":130}],[{"start":{"row":45,"column":19},"end":{"row":45,"column":20},"action":"insert","lines":["m"],"id":131}],[{"start":{"row":44,"column":49},"end":{"row":44,"column":50},"action":"insert","lines":["i"],"id":132}],[{"start":{"row":44,"column":50},"end":{"row":44,"column":51},"action":"insert","lines":["t"],"id":133}],[{"start":{"row":44,"column":51},"end":{"row":44,"column":52},"action":"insert","lines":["e"],"id":134}],[{"start":{"row":44,"column":52},"end":{"row":44,"column":53},"action":"insert","lines":["m"],"id":135}],[{"start":{"row":46,"column":5},"end":{"row":47,"column":15},"action":"remove","lines":["","  console.log()"],"id":136}],[{"start":{"row":46,"column":5},"end":{"row":46,"column":6},"action":"insert","lines":[";"],"id":137}],[{"start":{"row":46,"column":3},"end":{"row":46,"column":4},"action":"remove","lines":[" "],"id":138}],[{"start":{"row":23,"column":27},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":139},{"start":{"row":24,"column":0},"end":{"row":24,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":24,"column":8},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":140},{"start":{"row":25,"column":0},"end":{"row":25,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":25,"column":8},"end":{"row":25,"column":9},"action":"insert","lines":["c"],"id":141}],[{"start":{"row":25,"column":9},"end":{"row":25,"column":10},"action":"insert","lines":["p"],"id":142}],[{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"insert","lines":["o"],"id":143}],[{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"remove","lines":["o"],"id":144}],[{"start":{"row":25,"column":9},"end":{"row":25,"column":10},"action":"remove","lines":["p"],"id":145}],[{"start":{"row":25,"column":9},"end":{"row":25,"column":10},"action":"insert","lines":["o"],"id":146}],[{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"insert","lines":["n"],"id":147}],[{"start":{"row":25,"column":11},"end":{"row":25,"column":12},"action":"insert","lines":["s"],"id":148}],[{"start":{"row":25,"column":12},"end":{"row":25,"column":13},"action":"insert","lines":["o"],"id":149}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"insert","lines":["l"],"id":150}],[{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"insert","lines":["e"],"id":151}],[{"start":{"row":25,"column":15},"end":{"row":25,"column":16},"action":"insert","lines":["."],"id":152}],[{"start":{"row":25,"column":16},"end":{"row":25,"column":17},"action":"insert","lines":["l"],"id":153}],[{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"insert","lines":["o"],"id":154}],[{"start":{"row":25,"column":18},"end":{"row":25,"column":19},"action":"insert","lines":["g"],"id":155}],[{"start":{"row":25,"column":19},"end":{"row":25,"column":20},"action":"insert","lines":[")"],"id":156}],[{"start":{"row":25,"column":20},"end":{"row":25,"column":22},"action":"insert","lines":["()"],"id":157}],[{"start":{"row":25,"column":20},"end":{"row":25,"column":22},"action":"remove","lines":["()"],"id":158}],[{"start":{"row":25,"column":19},"end":{"row":25,"column":20},"action":"remove","lines":[")"],"id":159}],[{"start":{"row":25,"column":19},"end":{"row":25,"column":21},"action":"insert","lines":["()"],"id":160}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"insert","lines":["a"],"id":161}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"remove","lines":["a"],"id":162}],[{"start":{"row":25,"column":20},"end":{"row":25,"column":21},"action":"insert","lines":["a"],"id":163}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"insert","lines":["n"],"id":164}],[{"start":{"row":25,"column":22},"end":{"row":25,"column":23},"action":"insert","lines":["m"],"id":165}],[{"start":{"row":25,"column":22},"end":{"row":25,"column":23},"action":"remove","lines":["m"],"id":166}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"remove","lines":["n"],"id":167}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"insert","lines":["b"],"id":168}],[{"start":{"row":25,"column":22},"end":{"row":25,"column":23},"action":"insert","lines":[" "],"id":169}],[{"start":{"row":25,"column":23},"end":{"row":25,"column":24},"action":"insert","lines":[","],"id":170}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"insert","lines":[" "],"id":171}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"remove","lines":[" "],"id":172}],[{"start":{"row":25,"column":23},"end":{"row":25,"column":24},"action":"remove","lines":[","],"id":173}],[{"start":{"row":25,"column":22},"end":{"row":25,"column":23},"action":"remove","lines":[" "],"id":174}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"remove","lines":["b"],"id":175}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"insert","lines":[","],"id":176}],[{"start":{"row":25,"column":22},"end":{"row":25,"column":23},"action":"insert","lines":["b"],"id":177}],[{"start":{"row":25,"column":23},"end":{"row":25,"column":24},"action":"insert","lines":[","],"id":178}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"insert","lines":["x"],"id":179}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"remove","lines":["x"],"id":180}],[{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"insert","lines":["c"],"id":181}],[{"start":{"row":25,"column":26},"end":{"row":25,"column":27},"action":"insert","lines":[";"],"id":182}],[{"start":{"row":0,"column":0},"end":{"row":244,"column":0},"action":"remove","lines":["/**"," * @name ityped"," * @description Dead simple Animated Typing with no dependencies"," * @author Luis Vinícius"," * @email luis@uilabs.me"," */;","(function (root, factory) {","  if (typeof define === \"function\" && define.amd) {","    define([], factory);","  } else if (typeof exports === \"object\") {","    module.exports = {","      init: factory.init","    }","  } else {","    root.ityped = factory;","  }","}(this, function (global) {","  /**","   * async foreach","   * https://www.npmjs.com/package/async-foreach","   */","    const forEach = function (a, b, c) {","      var d = -1,","        e = a.length >>> 0;","        ","        console.log(a,b,c);","      (function f(g) {","        var h,","          j = g === !1;","        do","          ++d;","        while (!(d in a) && d !== e);","        if (j || d === e) {","          c && c(!j, a);","          return","        }","        g = b.call({","          async: function () {","            return h = !0,","            f","          }","        }, a[d], d, a),","        h || f(g)","      })()","    };","  ","  forEach(['strings', 'other strings'], function(item){","    console.log(item)","  });","  /**","   * el is the element","   */","  let selectedElement,","    props,","    /**","    * creating the cursor","    */","    cursor = document.createElement('span');","  cursor","    .classList","    .add('ityped-cursor');","  cursor.textContent = '|';","","  /**","   * @name setProps","   * @description Set the ityped properties configuration","   * @param {Object} config The configuration properties","   * @return {Promise}","   */","  function setProps ( config ) {","    let props = config;","    props.strings    = config.strings    || ['Put you string here...', 'and Enjoy!']","    props.typeSpeed  = config.typeSpeed  || 100;","    props.backSpeed  = config.backSpeed  || 50;","    props.backDelay  = config.backDelay  || 500;","    props.startDelay = config.startDelay || 500;","    props.showCursor = config.showCursor;","    props.loop       = config.loop       || false;","","    if (props.showCursor === undefined) props.showCursor = true;","    if (props.showCursor) selectedElement.insertAdjacentElement('afterend', cursor);","    if (props.cursorChar !== undefined) cursor.textContent = props.cursorChar;","","    return Promise.resolve(props);","  }","  /**","   * @name init","   * @param {String} element The element that will receive the strings","   * @param {Object} config The initial configuration","   */","  function init(element, config) {","    selectedElement = document.querySelector(element);","    setProps(config).then(function(properties){","      props = properties;","      loopingOnWords(props.strings);","    })","  }","","  /**","   * @name loopingOnWords","   * @description Loop on each string passed","   * @param {Array} words The array that contain the words","   */","  function loopingOnWords(words) {","    forEach(words, function (word, index, arr) {","      let time = (props.typeSpeed * word.length - 1);","      /**","       * set the correct time","       * with the differences of type and back","       * speed","       */","      if (props.backSpeed < props.typeSpeed) {","        time -= (props.typeSpeed - props.backSpeed) * word.length;","      } else if (props.backSpeed > props.typeSpeed) {","        time += (props.backSpeed - props.typeSpeed) * word.length;","      }","      let done = this.async();","      let len = words.length;","      iterateWords(selectedElement, word, index, len).then(function () {","        setTimeout(function () {","          done();","        }, time)","      })","    }, function () {","      if (props.loop) {","        loopingOnWords(words);","      }","    });","  }","  /**","   * @name increment","   * @description Increment each letter and append it on element","   * @param {Element} selectedElement The Element that will receive the letters","   * @param {String} word The string that will be looped to","   * get each letter","   * @return {Promise}","   */","  function increment(selectedElement, word) {","    return new Promise(function (resolve, reject) {","      for (let i = 0; i < word.length; i++) {","        count = 0;","        let wordIndex = i;","        let len = word.length;","        setTimeout(function (i) {","          appendWord(selectedElement, word.charAt(wordIndex));","          count++;","          if (count === len - 1) {","            resolve();","          }","        }, props.typeSpeed * i);","      }","    })","  }","  /**","   * @name appendWord","   * @description Append each letter on Element","   * @param {Element} selectedElement The Element that will receive the letter","   * @param {String} word The string that will be appended","   */","  function appendWord(selectedElement, word) {","    selectedElement.innerHTML += word;","  }","","  /**","   * @name iterateWords","   * @description Iterate on each word, incrementing and decrementing","   * @param {Element} selectedElement The Element that will receive the letters of word","   * @param {String} word The string that is the word","   * @param {Integer} index The index position of the words Array","   * @param {Integer} wordsLengthArray The length of words Array","   * @return {Promise}","   */","  function iterateWords(selectedElement, word, index, wordsLengthArray) {","    return new Promise(function (resolve, reject) {","      increment(selectedElement, word)","        .then(function () {","          setTimeout(function () {","            decrement(selectedElement, word, index, wordsLengthArray)","              .then(function () {","                setTimeout(function(){","                  resolve();","                }, props.startDelay)","              });","          }, props.backDelay)","        });","    });","  }","  /**","   * @name iterateInsideDecrement","   * @description Iterate on each word, inside the decrement function for decrement the word","   * @param {Element} selectedElement The Element that will receive the letters of word","   * @param {String} word The string that is the word","   * @param {Integer} len The length of words Array","   * @param {Promise} resolve The Promise.resolve method that will be trigerred when","   * the decrement iteration are finished","   * @return {Promise}","   */","  function iterateInsideDecrement(selectedElement, word, len, resolve) {","    for (let i = len; i > 0; i--) {","      let iteratedI = i, count = len;","      setTimeout(function (i) {","        selectedElement.innerHTML = word.substring(0, len - iteratedI)","        count--;","        if (iteratedI === 1) {","          resolve();","        }","      }, props.backSpeed * i);","    }","  }","","  /**","   * @name decrement","   * @description decrement the word in the correct case","   * @param {Element} selectedElement The Element that will receive the letters of word","   * @param {String} word The string that is the word","   * @param {Integer} index The index of the Array that contain the word","   * @param {Integer} lengthWords The length of words Array","   */","  function decrement(selectedElement, word, index, lengthWords) {","    return new Promise(function (resolve, reject) {","      let len = word.length;","      // if is the last letter and the last word and no loop","      if (index + 1 === lengthWords) {","        if (!props.loop) {","        // when the last word","          if (props.onFinished !== undefined && typeof props.onFinished === \"function\"){","              props.onFinished();","          }","          selectedElement.innerHTML = word;","        }","        else if (props.loop) {","          iterateInsideDecrement(selectedElement, word, len, resolve);","        }","      } else if (index + 1 !== lengthWords) {","        iterateInsideDecrement(selectedElement, word, len, resolve);","      }","    })","  }","","  /**","   * Return the init function","   */","  return {init}","}(this)));",""],"id":183},{"start":{"row":0,"column":0},"end":{"row":239,"column":10},"action":"insert","lines":["/**"," * @name ityped"," * @description Dead simple Animated Typing with no dependencies"," * @author Luis Vinícius"," * @email luis@uilabs.me"," */;","(function (root, factory) {","  if (typeof define === \"function\" && define.amd) {","    define([], factory);","  } else if (typeof exports === \"object\") {","    module.exports = {","      init: factory.init","    }","  } else {","    root.ityped = factory;","  }","}(this, function (global) {","  /**","   * async foreach","   * https://www.npmjs.com/package/async-foreach","   */","    const forEach = function (a, b, c) {","      var d = -1,","        e = a.length >>> 0;","      (function f(g) {","        var h,","          j = g === !1;","        do","          ++d;","        while (!(d in a) && d !== e);","        if (j || d === e) {","          c && c(!j, a);","          return","        }","        g = b.call({","          async: function () {","            return h = !0,","            f","          }","        }, a[d], d, a),","        h || f(g)","      })();","    };","","","  /**","   * el is the element","   */","  let selectedElement,","    props,","    /**","    * creating the cursor","    */","    cursor = document.createElement('span');","  cursor","    .classList","    .add('ityped-cursor');","  cursor.textContent = '|';","","  /**","   * @name setProps","   * @description Set the ityped properties configuration","   * @param {Object} config The configuration properties","   * @return {Promise}","   */","  function setProps ( config ) {","    let props = config;","    props.strings    = config.strings    || ['Put you string here...', 'and Enjoy!']","    props.typeSpeed  = config.typeSpeed  || 100;","    props.backSpeed  = config.backSpeed  || 50;","    props.backDelay  = config.backDelay  || 500;","    props.startDelay = config.startDelay || 500;","    props.showCursor = config.showCursor;","    props.loop       = config.loop       || false;","","    if (props.showCursor === undefined) props.showCursor = true;","    if (props.showCursor) selectedElement.insertAdjacentElement('afterend', cursor);","    if (props.cursorChar !== undefined) cursor.textContent = props.cursorChar;","","    return Promise.resolve(props);","  }","  /**","   * @name init","   * @param {String} element The element that will receive the strings","   * @param {Object} config The initial configuration","   */","  function init(element, config) {","    selectedElement = document.querySelector(element);","    setProps(config).then(function(properties){","      props = properties;","      loopingOnWords(props.strings);","    })","  }","","  /**","   * @name loopingOnWords","   * @description Loop on each string passed","   * @param {Array} words The array that contain the words","   */","  function loopingOnWords(words) {","    forEach(words, function (word, index, arr) {","      let time = (props.typeSpeed * word.length - 1);","      /**","       * set the correct time","       * with the differences of type and back","       * speed","       */","      if (props.backSpeed < props.typeSpeed) {","        time -= (props.typeSpeed - props.backSpeed) * word.length;","      } else if (props.backSpeed > props.typeSpeed) {","        time += (props.backSpeed - props.typeSpeed) * word.length;","      }","      let done = this.async();","      let len = words.length;","      iterateWords(selectedElement, word, index, len).then(function () {","        setTimeout(function () {","          done();","        }, time)","      })","    }, function () {","      if (props.loop) {","        loopingOnWords(words);","      }","    });","  }","  /**","   * @name increment","   * @description Increment each letter and append it on element","   * @param {Element} selectedElement The Element that will receive the letters","   * @param {String} word The string that will be looped to","   * get each letter","   * @return {Promise}","   */","  function increment(selectedElement, word) {","    return new Promise(function (resolve, reject) {","      for (let i = 0; i < word.length; i++) {","        count = 0;","        let wordIndex = i;","        let len = word.length;","        setTimeout(function (i) {","          appendWord(selectedElement, word.charAt(wordIndex));","          count++;","          if (count === len - 1) {","            resolve();","          }","        }, props.typeSpeed * i);","      }","    })","  }","  /**","   * @name appendWord","   * @description Append each letter on Element","   * @param {Element} selectedElement The Element that will receive the letter","   * @param {String} word The string that will be appended","   */","  function appendWord(selectedElement, word) {","    selectedElement.innerHTML += word;","  }","","  /**","   * @name iterateWords","   * @description Iterate on each word, incrementing and decrementing","   * @param {Element} selectedElement The Element that will receive the letters of word","   * @param {String} word The string that is the word","   * @param {Integer} index The index position of the words Array","   * @param {Integer} wordsLengthArray The length of words Array","   * @return {Promise}","   */","  function iterateWords(selectedElement, word, index, wordsLengthArray) {","    return new Promise(function (resolve, reject) {","      increment(selectedElement, word)","        .then(function () {","          setTimeout(function () {","            decrement(selectedElement, word, index, wordsLengthArray)","              .then(function () {","                setTimeout(function(){","                  resolve();","                }, props.startDelay)","              });","          }, props.backDelay)","        });","    });","  }","  /**","   * @name iterateInsideDecrement","   * @description Iterate on each word, inside the decrement function for decrement the word","   * @param {Element} selectedElement The Element that will receive the letters of word","   * @param {String} word The string that is the word","   * @param {Integer} len The length of words Array","   * @param {Promise} resolve The Promise.resolve method that will be trigerred when","   * the decrement iteration are finished","   * @return {Promise}","   */","  function iterateInsideDecrement(selectedElement, word, len, resolve) {","    for (let i = len; i > 0; i--) {","      let iteratedI = i, count = len;","      setTimeout(function (i) {","        selectedElement.innerHTML = word.substring(0, len - iteratedI)","        count--;","        if (iteratedI === 1) {","          resolve();","        }","      }, props.backSpeed * i);","    }","  }","","  /**","   * @name decrement","   * @description decrement the word in the correct case","   * @param {Element} selectedElement The Element that will receive the letters of word","   * @param {String} word The string that is the word","   * @param {Integer} index The index of the Array that contain the word","   * @param {Integer} lengthWords The length of words Array","   */","  function decrement(selectedElement, word, index, lengthWords) {","    return new Promise(function (resolve, reject) {","      let len = word.length;","      // if is the last letter and the last word and no loop","      if (index + 1 === lengthWords) {","        if (!props.loop) {","        // when the last word","          if (props.onFinished !== undefined && typeof props.onFinished === \"function\"){","              props.onFinished();","          }","          selectedElement.innerHTML = word;","        }","        else if (props.loop) {","          iterateInsideDecrement(selectedElement, word, len, resolve);","        }","      } else if (index + 1 !== lengthWords) {","        iterateInsideDecrement(selectedElement, word, len, resolve);","      }","    })","  }","","  /**","   * Return the init function","   */","  return {init}","}(this)));"]}],[{"start":{"row":21,"column":2},"end":{"row":21,"column":10},"action":"remove","lines":["  const "],"id":184,"ignore":true},{"start":{"row":21,"column":2},"end":{"row":22,"column":6},"action":"insert","lines":["(function (a) {","    a."]},{"start":{"row":42,"column":10},"end":{"row":42,"column":11},"action":"remove","lines":[";"]},{"start":{"row":43,"column":5},"end":{"row":43,"column":6},"action":"remove","lines":[";"]},{"start":{"row":44,"column":0},"end":{"row":44,"column":54},"action":"insert","lines":["  })(typeof exports == \"object\" && exports || global);"]},{"start":{"row":240,"column":10},"end":{"row":241,"column":0},"action":"insert","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":360,"scrollleft":0,"selection":{"start":{"row":50,"column":10},"end":{"row":50,"column":10},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":14,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1484041541043,"hash":"12cbbdcbd5801e3bf3378a154aa0c8ef09e0088e"}